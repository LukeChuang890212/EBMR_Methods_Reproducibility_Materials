ase.index = 3
subres[m, ] = summary.sim(sim.res, est.index, ase.index, true.mu[l])
m = m + 1
}
}
}
res[, ((l-1)*5+1):((l-1)*5+5)] = subres
}
ChunagData_SM2.3 = readRDS("ChuangData_SM/ChuangData_SM2.3_2000.RDS")
ChunagData_SM2.4 = readRDS("ChuangData_SM/ChuangData_SM2.4_2000.RDS")
true.mu = c(mean(ChunagData_SM2.3$y), mean(ChunagData_SM2.4$y))
sim.dats = c("ChuangData2.3-nested", "ChuangData2.4-nested")
N.v = c(300, 1000)
vers= rep("43", 8)
res = matrix(NA, 8*length(N.v), 5*length(sim.dats))
for(l in 1:length(sim.dats)){
data = sim.dats[l]
subres = matrix(NA, 8*length(N.v),  5)
m = 1
for(j in 1:length(N.v)){
N = N.v[j]
for(model.num in 1:3){
model.sets = combn(3, model.num)
for(i in 1:ncol(model.sets)){
# print(c(model.num, i))
model.set = model.sets[, i]
sim.res = source(paste0(c("ChuangResults_SM/ChuangChao2023_", data, "_", model.set, "_", N,  "_", vers[i] ,".RData"), collapse = ""))[[1]]
if(model.num == 1 & i == 1){
est.index = 2
ase.index = 4
subres[m, ] = summary.sim(sim.res, est.index, ase.index, true.mu[l])
m = m + 1
}
est.index = 1
ase.index = 3
subres[m, ] = summary.sim(sim.res, est.index, ase.index, true.mu[l])
m = m + 1
}
}
}
res[, ((l-1)*5+1):((l-1)*5+5)] = subres
}
est.names= rep(c("$\\hat{\\mu}_\\text{IPW}$", "$\\hat{\\mu}_{100}$", "$\\hat{\\mu}_{010}$", "$\\hat{\\mu}_{001}$",
"$\\hat{\\mu}_{110}$", "$\\hat{\\mu}_{101}$", "$\\hat{\\mu}_{011}$",
"$\\hat{\\mu}_{111}$"), length(N.v))
res = cbind(est.names, as.data.frame(res)) %>% as.data.frame
colnames(res) = c("", rep(c("Bias", "ESD", "ASE", "MSE", "CP"), length(sim.dats)))
kable(res, align = "c", booktabs = TRUE, escape = FALSE, linesep = "") %>%
kable_styling(full_width = FALSE, latex_options = c("hold_position")) %>%
add_header_above(c("", "$50\\%$ missing" = 5, "$30\\%$ missing" = 5))
kable(res, align = "c", booktabs = TRUE, format = "latex", escape = FALSE, linesep = "") %>%
kable_styling(full_width = FALSE, latex_options = c("hold_position")) %>%
add_header_above(c("", "$50\\%$ missing" = 5, "$30\\%$ missing" = 5))
ChunagData_SM2.3.mild = readRDS("ChuangData_SM/ChuangData_SM2.3.mild2_1000.RDS")
ChunagData_SM2.4.mild = readRDS("ChuangData_SM/ChuangData_SM2.4.mild2_300.RDS")
true.mu = mean(ChunagData_SM2.3.mild$y)
sim.dats = c("ChuangData2.3.mild2-nested", "ChuangData2.4.mild2-nested")
N.v = c(300, 1000)
vers= rep("43", 8)
res = matrix(NA, 8*length(N.v), 5*length(sim.dats))
for(l in 1:length(sim.dats)){
data = sim.dats[l]
subres = matrix(NA, 8*length(N.v),  5)
m = 1
for(j in 1:length(N.v)){
N = N.v[j]
for(model.num in 1:3){
model.sets = combn(3, model.num)
for(i in 1:ncol(model.sets)){
# print(c(model.num, i))
model.set = model.sets[, i]
sim.res = source(paste0(c("ChuangResults_SM/ChuangChao2023_", data, "_", model.set, "_", N,  "_", vers[i] ,".RData"), collapse = ""))[[1]]
if(model.num == 1 & i == 1){
est.index = 2
ase.index = 4
subres[m, ] = summary.sim(sim.res, est.index, ase.index, true.mu)
m = m + 1
}
est.index = 1
ase.index = 3
subres[m, ] = summary.sim(sim.res, est.index, ase.index, true.mu)
m = m + 1
}
}
}
res[, ((l-1)*5+1):((l-1)*5+5)] = subres
}
est.names= rep(c("$\\hat{\\mu}_\\text{IPW}$", "$\\hat{\\mu}_{100}$", "$\\hat{\\mu}_{010}$", "$\\hat{\\mu}_{001}$",
"$\\hat{\\mu}_{110}$", "$\\hat{\\mu}_{101}$", "$\\hat{\\mu}_{011}$",
"$\\hat{\\mu}_{111}$"), length(N.v))
res = cbind(est.names, as.data.frame(res)) %>% as.data.frame
colnames(res) = c("", rep(c("Bias", "ESD", "ASE", "MSE", "CP"), length(sim.dats)))
kable(res, align = "c", booktabs = TRUE, escape = FALSE, linesep = "") %>%
kable_styling(full_width = FALSE, latex_options = c("hold_position")) %>%
add_header_above(c("", "$50\\%$ missing" = 5, "$30\\%$ missing" = 5))
kable(res, align = "c", booktabs = TRUE, format = "latex", escape = FALSE, linesep = "") %>%
kable_styling(full_width = FALSE, latex_options = c("hold_position")) %>%
add_header_above(c("", "$50\\%$ missing" = 5, "$30\\%$ missing" = 5))
ChunagData_SM1.1.mild = readRDS("ChuangData_SM/ChuangData_SM1.1.mild2_1000.RDS")
ChunagData_SM1.2.mild = readRDS("ChuangData_SM/ChuangData_SM1.2.mild2_1000.RDS")
true.mu = mean(ChunagData_SM1.1.mild$y)
sim.dats = c("ChuangData1.1.mild2-nested", "ChuangData1.2.mild2-nested")
N.v = c(300, 1000)
vers= c("43", "43")
res = matrix(NA, 8*length(N.v), 5*length(sim.dats))
for(l in 1:length(sim.dats)){
data = sim.dats[l]
subres = matrix(NA, 8*length(N.v),  5)
m = 1
for(j in 1:length(N.v)){
N = N.v[j]
for(model.num in 1:3){
model.sets = combn(3, model.num)
for(i in 1:ncol(model.sets)){
# print(c(model.num, i))
model.set = model.sets[, i]
sim.res = source(paste0(c("ChuangResults_SM/ChuangChao2023_", data, "_", model.set, "_", N,  "_", vers[l] ,".RData"), collapse = ""))[[1]]
if(model.num == 1 & i == 1){
est.index = 2
ase.index = 4
subres[m, ] = summary.sim(sim.res, est.index, ase.index, true.mu)
m = m + 1
}
est.index = 1
ase.index = 3
subres[m, ] = summary.sim(sim.res, est.index, ase.index, true.mu)
m = m + 1
}
}
}
res[, ((l-1)*5+1):((l-1)*5+5)] = subres
}
est.names= rep(c("$\\hat{\\mu}_\\text{IPW}$", "$\\hat{\\mu}_{100}$", "$\\hat{\\mu}_{010}$", "$\\hat{\\mu}_{001}$",
"$\\hat{\\mu}_{110}$", "$\\hat{\\mu}_{101}$", "$\\hat{\\mu}_{011}$",
"$\\hat{\\mu}_{111}$"), length(N.v))
res = cbind(est.names, as.data.frame(res)) %>% as.data.frame
colnames(res) = c("", rep(c("Bias", "ESD", "ASE", "MSE", "CP"), length(sim.dats)))
kable(res, align = "c", booktabs = TRUE, escape = FALSE, linesep = "") %>%
kable_styling(full_width = FALSE, latex_options = c("hold_position")) %>%
add_header_above(c("", "$50\\%$ missing" = 5, "$30\\%$ missing" = 5))
ChunagData_SM1.3.mild = readRDS("ChuangData_SM/ChuangData_SM1.3.mild2_1000.RDS")
ChunagData_SM1.4.mild = readRDS("ChuangData_SM/ChuangData_SM1.4.mild2_300.RDS")
true.mu = mean(ChunagData_SM1.3.mild$y)
sim.dats = c("ChuangData1.3.mild2-nested", "ChuangData1.4.mild2-nested")
N.v = c(300, 1000)
vers= rep("43", 8)
res = matrix(NA, 8*length(N.v), 5*length(sim.dats))
for(l in 1:length(sim.dats)){
data = sim.dats[l]
subres = matrix(NA, 8*length(N.v),  5)
m = 1
for(j in 1:length(N.v)){
N = N.v[j]
for(model.num in 1:3){
model.sets = combn(3, model.num)
for(i in 1:ncol(model.sets)){
# print(c(model.num, i))
model.set = model.sets[, i]
sim.res = source(paste0(c("ChuangResults_SM/ChuangChao2023_", data, "_", model.set, "_", N,  "_", vers[i] ,".RData"), collapse = ""))[[1]]
if(model.num == 1 & i == 1){
est.index = 2
ase.index = 4
subres[m, ] = summary.sim(sim.res, est.index, ase.index, true.mu)
m = m + 1
}
est.index = 1
ase.index = 3
subres[m, ] = summary.sim(sim.res, est.index, ase.index, true.mu)
m = m + 1
}
}
}
res[, ((l-1)*5+1):((l-1)*5+5)] = subres
}
res = matrix(NA, 8*length(N.v), 5*length(sim.dats))
for(l in 1:length(sim.dats)){
data = sim.dats[l]
subres = matrix(NA, 8*length(N.v),  5)
m = 1
for(j in 1:length(N.v)){
N = N.v[j]
for(model.num in 1:3){
model.sets = combn(3, model.num)
for(i in 1:ncol(model.sets)){
# print(c(model.num, i))
model.set = model.sets[, i]
sim.res = source(paste0(c("ChuangResults_SM/ChuangChao2023_", data, "_", model.set, "_", N,  "_", vers[i] ,".RData"), collapse = ""))[[1]]
if(model.num == 1 & i == 1){
est.index = 2
ase.index = 4
subres[m, ] = summary.sim(sim.res, est.index, ase.index, true.mu)
m = m + 1
}
est.index = 1
ase.index = 3
subres[m, ] = summary.sim(sim.res, est.index, ase.index, true.mu)
m = m + 1
}
}
}
res[, ((l-1)*5+1):((l-1)*5+5)] = subres
}
setwd("~/Library/CloudStorage/GoogleDrive-mingjuresearch@gmail.com/其他電腦/我的電腦/MNAR-Simulation/MNAR_2023/Mental Health")
options(knitr.kable.NA = '')
knitr::opts_chunk$set(echo = FALSE, fig.height = 10, fig.width = 16, fig.align = "center")
library(MASS)
library(abind)
library(Matrix)
library(tidyverse)
library(kableExtra)
library(numDeriv)
library(sandwich)
library(ggplot2)
library(ggpubr)
library(pracma)
library(foreach)
library(doParallel)
library(doSNOW)
situation = 1
wrong.num = 1
boot = TRUE; B = 500;
dat = original.dat
dat$fh = dat$father*dat$health
dat$fp = dat$father*dat$parent_report
dat$hp = dat$health*dat$parent_report
propensity.list.0 = list(list(w = function(theta, y, x, L) 1+exp(cbind(rep(1, L), y, x)%*%theta),
w.prime = function(theta, y, x, L) exp(cbind(rep(1, L), y, x)%*%theta),
model.y = function(y) y,
model.x1.names = NULL,
model.x2.names = NULL),
list(w = function(theta, y, x, L) 1+exp(cbind(rep(1, L), x)%*%theta),
w.prime = function(theta, y, x, L) exp(cbind(rep(1, L), x)%*%theta),
model.y = function(y) NULL,
model.x1.names = c("father", "parent_report"),
model.x2.names = NULL),
list(w = function(theta, y, x, L) 1+exp(cbind(rep(1, L), y, x)%*%theta),
w.prime = function(theta, y, x, L) exp(cbind(rep(1, L), y, x)%*%theta),
model.y = function(y) y,
model.x1.names = c("father"),
model.x2.names = NULL))
propensity.list.1 = list(list(w = function(theta, y, x, L) 1+exp(cbind(rep(1, L), y, x)%*%theta),
w.prime = function(theta, y, x, L) exp(cbind(rep(1, L), y, x)%*%theta),
model.y = function(y) y,
model.x1.names = NULL,
model.x2.names = NULL),
list(w = function(theta, y, x, L) 1+exp(cbind(rep(1, L), x)%*%theta),
w.prime = function(theta, y, x, L) exp(cbind(rep(1, L), x)%*%theta),
model.y = function(y) NULL,
model.x1.names = c("father"),
model.x2.names = NULL),
list(w = function(theta, y, x, L) 1+exp(cbind(rep(1, L), y, x)%*%theta),
w.prime = function(theta, y, x, L) exp(cbind(rep(1, L), y, x)%*%theta),
model.y = function(y) y,
model.x1.names = c("father"),
model.x2.names = NULL))
propensity.list.list = list(propensity.list.0, propensity.list.1)
health.status = 0:1
subset.names = c("health0", "health1")
# effect.f = function(x, y) y/x
# delta.method = function(x, y) c(-y/x^2, 1/x)
effect.f = function(x, y) (y/(1-y))/(x/(1-x))
delta.method = function(x, y) c(-(y/(1-y))/((x/(1-x))^2)*((1/x^2)/((1/x-1)^2)),
((1/y^2)/((1/y-1)^2))/(x/(1-x)))
true.index = c(3, 3)
zeta.v = seq(-0.5, -0.05, length.out = 30)
xi.v = N^(zeta.v)
xi.v = seq(0, N^(-0.05), length.out = 30)
xi.v = seq(0, N^(-0.5), length.out = 30)
res = matrix(NA, length(xi.v), 2)
m = 1
for(xi in xi.v){
est = matrix(NA, length(health.status), 2)
for(k in 1:length(health.status)){
mild.est.res = readRDS(paste0(c("MHDResults/MNAR_est_", subset.names[k], "_", 1:3, "_mild", round(xi, 3), "_OR5.RDS"), collapse = ""))
print(mild.est.res$w.pi)
est[k, ] = unlist(mild.est.res[c(1, 2)])
}
effect = effect.f(est[1, 1], est[2, 1])
Sigma = matrix(c(est[1, 2]^2, 0, 0, est[2, 2]^2), 2,2)
se = sqrt(delta.method(est[1, 1], est[2, 1])%*%Sigma%*%delta.method(est[1, 1], est[2, 1]))
res[m, ] = c(effect, se)
m = m + 1
}
health.status = 0:1
subset.names = c("health0", "health1")
# effect.f = function(x, y) y/x
# delta.method = function(x, y) c(-y/x^2, 1/x)
effect.f = function(x, y) (y/(1-y))/(x/(1-x))
delta.method = function(x, y) c(-(y/(1-y))/((x/(1-x))^2)*((1/x^2)/((1/x-1)^2)),
((1/y^2)/((1/y-1)^2))/(x/(1-x)))
true.index = c(3, 3)
zeta.v = seq(-0.5, -0.05, length.out = 30)
xi.v = N^(zeta.v)
xi.v = seq(0, N^(-0.05), length.out = 30)
xi.v = seq(0, N^(-0.05), length.out = 30)
res = matrix(NA, length(xi.v), 2)
m = 1
for(xi in xi.v){
est = matrix(NA, length(health.status), 2)
for(k in 1:length(health.status)){
mild.est.res = readRDS(paste0(c("MHDResults/MNAR_est_", subset.names[k], "_", 1:3, "_mild", round(xi, 3), "_OR5.RDS"), collapse = ""))
print(mild.est.res$w.pi)
est[k, ] = unlist(mild.est.res[c(1, 2)])
}
effect = effect.f(est[1, 1], est[2, 1])
Sigma = matrix(c(est[1, 2]^2, 0, 0, est[2, 2]^2), 2,2)
se = sqrt(delta.method(est[1, 1], est[2, 1])%*%Sigma%*%delta.method(est[1, 1], est[2, 1]))
res[m, ] = c(effect, se)
m = m + 1
}
health.status = 0:1
subset.names = c("health0", "health1")
# effect.f = function(x, y) y/x
# delta.method = function(x, y) c(-y/x^2, 1/x)
effect.f = function(x, y) (y/(1-y))/(x/(1-x))
delta.method = function(x, y) c(-(y/(1-y))/((x/(1-x))^2)*((1/x^2)/((1/x-1)^2)),
((1/y^2)/((1/y-1)^2))/(x/(1-x)))
true.index = c(3, 3)
zeta.v = seq(-0.5, -0.05, length.out = 30)
xi.v = N^(zeta.v)
xi.v = seq(0, N^(-0.05), length.out = 30)
xi.v = seq(0, N^(-0.5), length.out = 30)
res = matrix(NA, length(xi.v), 2)
m = 1
for(xi in xi.v){
est = matrix(NA, length(health.status), 2)
for(k in 1:length(health.status)){
mild.est.res = readRDS(paste0(c("MHDResults/MNAR_est_", subset.names[k], "_", 1:3, "_mild", round(xi, 3), "_OR5.RDS"), collapse = ""))
print(mild.est.res$w.pi)
est[k, ] = unlist(mild.est.res[c(1, 2)])
}
effect = effect.f(est[1, 1], est[2, 1])
Sigma = matrix(c(est[1, 2]^2, 0, 0, est[2, 2]^2), 2,2)
se = sqrt(delta.method(est[1, 1], est[2, 1])%*%Sigma%*%delta.method(est[1, 1], est[2, 1]))
res[m, ] = c(effect, se)
m = m + 1
}
options(knitr.kable.NA = '')
knitr::opts_chunk$set(echo = FALSE, fig.height = 10, fig.width = 16, fig.align = "center")
library(MASS)
library(abind)
library(Matrix)
library(tidyverse)
library(kableExtra)
library(numDeriv)
library(sandwich)
library(ggplot2)
library(ggpubr)
library(pracma)
library(foreach)
library(doParallel)
library(doSNOW)
source("Wang2014_12.r")
source("Han2018_2.r")
source("KimYu2012.r")
source("ZhaoMa2022_2.r")
source("ChuangChao2023_SM.r")
dat.app = read.csv("data_application.csv")
percent = dat.app$Percentage
class.n = round(2486*percent/100)
dat = matrix(NA, 2486, 5)
for(i in 1:nrow(dat.app)){
dat[((sum(class.n[0:(i-1)]))+1):sum(class.n[1:i]),] = matrix(rep(unlist(dat.app[i,]), each = class.n[i]), class.n[i], 5)
}
dat = as.data.frame(dat[, -5])
dat[dat == "Yes"] = 1
dat[dat == "No"] = 0
dat[dat == "Abnormal"] = 1
dat[dat == "Normal"] = 0
dat[dat == "Missing"] = NA
colnames(dat) = c("father", "health", "y", "parent_report")
dat$r = ifelse(is.na(dat$y), 0, 1)
dat$father = as.numeric(dat$father)
dat$health = as.numeric(dat$health)
dat$y = as.numeric(dat$y)
dat$parent_report = as.numeric(dat$parent_report)
dat$y[dat$r == 0] = -1
original.dat = dat
dim(dat)
summary(dat)
apply(dat, 2, function(v) sum(!is.na(v)))
apply(dat, 2, function(v) sum(is.na(v))/length(v))
N = nrow(dat)
n = sum(dat$r)
mu.complete = mean(dat$y[dat$r == 1])
se.complete = sd(dat$y[dat$r == 1])/sqrt(n)
situation = 1
wrong.num = 1
boot = TRUE; B = 500;
dat = original.dat
dat$fh = dat$father*dat$health
dat$fp = dat$father*dat$parent_report
dat$hp = dat$health*dat$parent_report
propensity.list.0 = list(list(w = function(theta, y, x, L) 1+exp(cbind(rep(1, L), y, x)%*%theta),
w.prime = function(theta, y, x, L) exp(cbind(rep(1, L), y, x)%*%theta),
model.y = function(y) y,
model.x1.names = NULL,
model.x2.names = NULL),
list(w = function(theta, y, x, L) 1+exp(cbind(rep(1, L), x)%*%theta),
w.prime = function(theta, y, x, L) exp(cbind(rep(1, L), x)%*%theta),
model.y = function(y) NULL,
model.x1.names = c("father", "parent_report"),
model.x2.names = NULL),
list(w = function(theta, y, x, L) 1+exp(cbind(rep(1, L), y, x)%*%theta),
w.prime = function(theta, y, x, L) exp(cbind(rep(1, L), y, x)%*%theta),
model.y = function(y) y,
model.x1.names = c("father"),
model.x2.names = NULL))
propensity.list.1 = list(list(w = function(theta, y, x, L) 1+exp(cbind(rep(1, L), y, x)%*%theta),
w.prime = function(theta, y, x, L) exp(cbind(rep(1, L), y, x)%*%theta),
model.y = function(y) y,
model.x1.names = NULL,
model.x2.names = NULL),
list(w = function(theta, y, x, L) 1+exp(cbind(rep(1, L), x)%*%theta),
w.prime = function(theta, y, x, L) exp(cbind(rep(1, L), x)%*%theta),
model.y = function(y) NULL,
model.x1.names = c("father"),
model.x2.names = NULL),
list(w = function(theta, y, x, L) 1+exp(cbind(rep(1, L), y, x)%*%theta),
w.prime = function(theta, y, x, L) exp(cbind(rep(1, L), y, x)%*%theta),
model.y = function(y) y,
model.x1.names = c("father"),
model.x2.names = NULL))
propensity.list.list = list(propensity.list.0, propensity.list.1)
auxilliary.f = function(dat) list(cbind(as.factor(dat$father), as.factor(dat$parent_report)),
NULL)
health.status = 0:1
subset.names = c("health0", "health1")
# effect.f = function(x, y) y/x
# delta.method = function(x, y) c(-y/x^2, 1/x)
effect.f = function(x, y) (y/(1-y))/(x/(1-x))
delta.method = function(x, y) c(-(y/(1-y))/((x/(1-x))^2)*((1/x^2)/((1/x-1)^2)),
((1/y^2)/((1/y-1)^2))/(x/(1-x)))
true.index = c(3, 3)
zeta.v = seq(-0.5, -0.05, length.out = 30)
xi.v = N^(zeta.v)
xi.v = seq(0, N^(-0.5), length.out = 30)
res = matrix(NA, length(xi.v), 2)
m = 1
for(xi in xi.v){
est = matrix(NA, length(health.status), 2)
for(k in 1:length(health.status)){
dat = original.dat[original.dat$health == health.status[k], ]
N = nrow(dat)
n = sum(dat$r)
y = dat$y
r = dat$r
auxilliary = auxilliary.f(dat)
pi.fit.list = list()
l = 1
for(j in 1:length(propensity.list.list[[k]])){
pi.fit.list[[l]] = Wang2014.1(auxilliary = auxilliary,
model.y = propensity.list.list[[k]][[j]]$model.y(y),
model.x1.names = propensity.list.list[[k]][[j]]$model.x1.names,
model.x2.names = propensity.list.list[[k]][[j]]$model.x2.names,
w = propensity.list.list[[k]][[j]]$w,
w.prime = propensity.list.list[[k]][[j]]$w.prime)
l = l + 1
}
est.res = ChuangChao2023(pi.fit.list, auxilliary, family)
exp.tilt = function(y, x) exp(xi*as.matrix(cbind(y))%*%rep(1, ncol(cbind(y))))
exp.tilt.x.names = NULL
mild.est.res = mild.est(pi.m = est.res$pi.m, true.index = true.index[k], exp.tilt = exp.tilt, exp.tilt.x.names = exp.tilt.x.names,
auxilliary, family = "gaussian")
saveRDS(mild.est.res,
paste0(c("MHDResults/MNAR_est_", subset.names[k], "_", 1:3, "_mild", round(xi, 3), "_OR5.RDS"), collapse = ""))
print(mild.est.res$w.pi)
est[k, ] = unlist(mild.est.res[c(1, 2)])
}
effect = effect.f(est[1, 1], est[2, 1])
Sigma = matrix(c(est[1, 2]^2, 0, 0, est[2, 2]^2), 2,2)
se = sqrt(delta.method(est[1, 1], est[2, 1])%*%Sigma%*%delta.method(est[1, 1], est[2, 1]))
res[m, ] = c(effect, se)
m = m + 1
}
health.status = 0:1
subset.names = c("health0", "health1")
# effect.f = function(x, y) y/x
# delta.method = function(x, y) c(-y/x^2, 1/x)
effect.f = function(x, y) (y/(1-y))/(x/(1-x))
delta.method = function(x, y) c(-(y/(1-y))/((x/(1-x))^2)*((1/x^2)/((1/x-1)^2)),
((1/y^2)/((1/y-1)^2))/(x/(1-x)))
true.index = c(3, 3)
zeta.v = seq(-0.5, -0.05, length.out = 30)
xi.v = N^(zeta.v)
xi.v = seq(0, N^(-0.05), length.out = 30)
xi.v = seq(0, N^(-0.5), length.out = 30)
res = matrix(NA, length(xi.v), 2)
m = 1
for(xi in xi.v){
est = matrix(NA, length(health.status), 2)
for(k in 1:length(health.status)){
mild.est.res = readRDS(paste0(c("MHDResults/MNAR_est_", subset.names[k], "_", 1:3, "_mild", round(xi, 3), "_OR5.RDS"), collapse = ""))
print(mild.est.res$w.pi)
est[k, ] = unlist(mild.est.res[c(1, 2)])
}
effect = effect.f(est[1, 1], est[2, 1])
Sigma = matrix(c(est[1, 2]^2, 0, 0, est[2, 2]^2), 2,2)
se = sqrt(delta.method(est[1, 1], est[2, 1])%*%Sigma%*%delta.method(est[1, 1], est[2, 1]))
res[m, ] = c(effect, se)
m = m + 1
}
# Create the plot
plot(cbind(xi.v, res[, 1]), type = "o",
xlab = expression(xi),
ylab = "",  # Remove default ylab to add custom label
las = 1)  # Ensure axis labels are horizontal
# Add the y-axis label manually with horizontal rotation
mtext(expression(hat(theta)), side = 2, line = 3, at = mean(par("usr")[3:4]), cex = 1, las = 1)
points(zeta.v, res[, 1], pch = 16)
abline(h = 1, lwd = 2)
range(res[, 1])
